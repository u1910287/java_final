/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javapro;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class Librarian extends javax.swing.JFrame {
    PreparedStatement ps = null;
    ResultSet rs = null;
    Connection con = javaconnect.connectdb();

    /**
     * Creates new form Librarian
     */
    public Librarian() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bookslist = new javax.swing.JButton();
        studentlist = new javax.swing.JButton();
        borrowedbooks = new javax.swing.JButton();
        blockedstudents = new javax.swing.JButton();
        returnthebook = new javax.swing.JButton();
        blockstudetns = new javax.swing.JButton();
        modifybooks = new javax.swing.JButton();
        btnAddBooks = new javax.swing.JButton();
        btnAddStudent = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Welcome Librarian");

        bookslist.setText("Books list");
        bookslist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookslistActionPerformed(evt);
            }
        });

        studentlist.setText("Students list");
        studentlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentlistActionPerformed(evt);
            }
        });

        borrowedbooks.setText("Borrowed books");
        borrowedbooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowedbooksActionPerformed(evt);
            }
        });

        blockedstudents.setText("Blocked Students");
        blockedstudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockedstudentsActionPerformed(evt);
            }
        });

        returnthebook.setText("Return the book");
        returnthebook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnthebookActionPerformed(evt);
            }
        });

        blockstudetns.setText("Block Students");
        blockstudetns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockstudetnsActionPerformed(evt);
            }
        });

        modifybooks.setText("Modify Books");
        modifybooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifybooksActionPerformed(evt);
            }
        });

        btnAddBooks.setText("Add Books");
        btnAddBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBooksActionPerformed(evt);
            }
        });

        btnAddStudent.setText("Add Student");
        btnAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bookslist, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(studentlist)
                                .addGap(18, 18, 18)
                                .addComponent(borrowedbooks)
                                .addGap(27, 27, 27)
                                .addComponent(returnthebook))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(blockstudetns)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(modifybooks)
                                .addGap(24, 24, 24)
                                .addComponent(blockedstudents)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddBooks)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddStudent)))))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookslist)
                    .addComponent(studentlist)
                    .addComponent(borrowedbooks)
                    .addComponent(returnthebook))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blockstudetns)
                    .addComponent(modifybooks)
                    .addComponent(blockedstudents)
                    .addComponent(btnAddBooks)
                    .addComponent(btnAddStudent))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookslistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookslistActionPerformed
       dispose();
        BookFrom booksform = new BookFrom();
        booksform.tableData();
         
    }//GEN-LAST:event_bookslistActionPerformed

    private void studentlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentlistActionPerformed
        dispose();       
        String query = "SELECT * FROM student";
        try{
           
        Students student = new Students();
        student.setVisible(true);
        
         ps = con.prepareStatement(query);
         rs = ps.executeQuery();
         while (rs.next()){
             String name = rs.getString("name");
             String surname = rs.getString("surname");
             String username = rs.getString("username");
             String password = rs.getString("password");
             String tableData[] = {name, surname, username, password};
             DefaultTableModel defaultModel = (DefaultTableModel) student.jTable1.getModel();
             defaultModel.addRow(tableData);
         }
        
        } catch (SQLException ex) { 
        Logger.getLogger(student_form.class.getName()).log(Level.SEVERE, null, ex);
    } 
    }//GEN-LAST:event_studentlistActionPerformed

    private void borrowedbooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowedbooksActionPerformed
        dispose();
        String query = "SELECT * FROM bbooks";
        try{
            BorrowedForm borrowedForm = new BorrowedForm();
            borrowedForm.setVisible(true);
            ps = con.prepareStatement(query);
         rs = ps.executeQuery();
         while (rs.next()){
             String name = rs.getString("name");
             String surname = rs.getString("surname");
             String id = rs.getString("id");
             String subject = rs.getString("subject");
             String title = rs.getString("title");
             String author = rs.getString("author");
             String bookID = rs.getString("bookID");
             String isbn = rs.getString("isbn");
             String tableData[] = {name, surname, id, subject, title, author, bookID, isbn};
             DefaultTableModel defaultModel = (DefaultTableModel) borrowedForm.jTable1.getModel();
             defaultModel.addRow(tableData);
        }
    } catch (SQLException ex) { 
        Logger.getLogger(student_form.class.getName()).log(Level.SEVERE, null, ex);
    }//GEN-LAST:event_borrowedbooksActionPerformed
    }
    private void blockstudetnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockstudetnsActionPerformed

        new block_students().setVisible(true);
    }//GEN-LAST:event_blockstudetnsActionPerformed

    private void blockedstudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockedstudentsActionPerformed
        dispose();
        String query = "SELECT * FROM blocked";
        try{
           
        BlockedStudents blockedstudent = new BlockedStudents();
        blockedstudent.setVisible(true);
        
         ps = con.prepareStatement(query);
         rs = ps.executeQuery();
         while (rs.next()){
             String name = rs.getString("name");
             String surname = rs.getString("surname");
             String id = rs.getString("id");
             String status = rs.getString("status");
             String tableData[] = {name, surname, id, status};
             DefaultTableModel defaultModel = (DefaultTableModel) blockedstudent.jTable1.getModel();
             defaultModel.addRow(tableData);
         }
        
        } catch (SQLException ex) { 
        Logger.getLogger(student_form.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_blockedstudentsActionPerformed

    private void returnthebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnthebookActionPerformed
        dispose();
        new ReturnTheBook().setVisible(true);
    }//GEN-LAST:event_returnthebookActionPerformed

    private void modifybooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifybooksActionPerformed
       
        new ModifyBook().setVisible(true);
    }//GEN-LAST:event_modifybooksActionPerformed

    private void btnAddBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBooksActionPerformed
        new AddBook().setVisible(true);
    }//GEN-LAST:event_btnAddBooksActionPerformed

    private void btnAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStudentActionPerformed
        new AddStudent().setVisible(true);
    }//GEN-LAST:event_btnAddStudentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Librarian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blockedstudents;
    private javax.swing.JButton blockstudetns;
    private javax.swing.JButton bookslist;
    private javax.swing.JButton borrowedbooks;
    private javax.swing.JButton btnAddBooks;
    private javax.swing.JButton btnAddStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton modifybooks;
    private javax.swing.JButton returnthebook;
    private javax.swing.JButton studentlist;
    // End of variables declaration//GEN-END:variables
}
